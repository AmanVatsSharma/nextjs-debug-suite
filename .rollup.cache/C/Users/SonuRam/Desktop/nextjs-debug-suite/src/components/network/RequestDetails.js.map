{"version":3,"file":"RequestDetails.js","sourceRoot":"","sources":["RequestDetails.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { NetworkRequest } from '../../core/networkMonitor';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 16px;\r\n  padding: 16px;\r\n  background: ${props => props.theme.colors.surface};\r\n  border-radius: 8px;\r\n  font-family: monospace;\r\n`;\r\n\r\nconst Section = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n`;\r\n\r\nconst SectionTitle = styled.h3`\r\n  margin: 0;\r\n  font-size: 14px;\r\n  color: ${props => props.theme.colors.textSecondary};\r\n`;\r\n\r\nconst InfoGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: auto 1fr;\r\n  gap: 8px 16px;\r\n  align-items: baseline;\r\n`;\r\n\r\nconst Label = styled.span`\r\n  color: ${props => props.theme.colors.textSecondary};\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Value = styled.span`\r\n  color: ${props => props.theme.colors.text};\r\n  font-size: 12px;\r\n  word-break: break-all;\r\n`;\r\n\r\nconst CodeBlock = styled.pre`\r\n  margin: 0;\r\n  padding: 8px;\r\n  background: ${props => props.theme.colors.background};\r\n  border-radius: 4px;\r\n  font-size: 12px;\r\n  overflow-x: auto;\r\n  color: ${props => props.theme.colors.text};\r\n`;\r\n\r\ninterface RequestDetailsProps {\r\n  request: NetworkRequest;\r\n}\r\n\r\nexport const RequestDetails: React.FC<RequestDetailsProps> = ({ request }) => {\r\n  const formatHeaders = (headers?: Record<string, string>) => {\r\n    if (!headers) return null;\r\n    return Object.entries(headers).map(([key, value]) => (\r\n      <React.Fragment key={key}>\r\n        <Label>{key}:</Label>\r\n        <Value>{value}</Value>\r\n      </React.Fragment>\r\n    ));\r\n  };\r\n\r\n  const formatBody = (body: any) => {\r\n    if (!body) return null;\r\n    try {\r\n      if (typeof body === 'string') {\r\n        try {\r\n          // Try to parse as JSON first\r\n          const parsed = JSON.parse(body);\r\n          return JSON.stringify(parsed, null, 2);\r\n        } catch {\r\n          // If not JSON, return as is\r\n          return body;\r\n        }\r\n      }\r\n      return JSON.stringify(body, null, 2);\r\n    } catch (error) {\r\n      return String(body);\r\n    }\r\n  };\r\n\r\n  const formatDuration = (duration?: number) => {\r\n    if (!duration) return 'N/A';\r\n    if (duration < 1000) return `${duration.toFixed(0)}ms`;\r\n    return `${(duration / 1000).toFixed(2)}s`;\r\n  };\r\n\r\n  const formatSize = (size?: number) => {\r\n    if (!size) return 'N/A';\r\n    if (size < 1024) return `${size}B`;\r\n    if (size < 1024 * 1024) return `${(size / 1024).toFixed(1)}KB`;\r\n    return `${(size / (1024 * 1024)).toFixed(1)}MB`;\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Section>\r\n        <SectionTitle>General</SectionTitle>\r\n        <InfoGrid role=\"grid\" aria-label=\"General Information\">\r\n          <Label>URL:</Label>\r\n          <Value>{request.url}</Value>\r\n          <Label>Method:</Label>\r\n          <Value>{request.method}</Value>\r\n          <Label>Status:</Label>\r\n          <Value>{request.status || 'Pending'}</Value>\r\n          <Label>Duration:</Label>\r\n          <Value>{formatDuration(request.duration)}</Value>\r\n          <Label>Size:</Label>\r\n          <Value>{formatSize(request.size)}</Value>\r\n          <Label>Initiator:</Label>\r\n          <Value>{request.initiator}</Value>\r\n        </InfoGrid>\r\n      </Section>\r\n\r\n      {request.requestHeaders && (\r\n        <Section>\r\n          <SectionTitle>Request Headers</SectionTitle>\r\n          <InfoGrid role=\"grid\" aria-label=\"Request Headers\">\r\n            {formatHeaders(request.requestHeaders)}\r\n          </InfoGrid>\r\n        </Section>\r\n      )}\r\n\r\n      {request.responseHeaders && (\r\n        <Section>\r\n          <SectionTitle>Response Headers</SectionTitle>\r\n          <InfoGrid role=\"grid\" aria-label=\"Response Headers\">\r\n            {formatHeaders(request.responseHeaders)}\r\n          </InfoGrid>\r\n        </Section>\r\n      )}\r\n\r\n      {request.requestBody && (\r\n        <Section>\r\n          <SectionTitle>Request Body</SectionTitle>\r\n          <CodeBlock>{formatBody(request.requestBody)}</CodeBlock>\r\n        </Section>\r\n      )}\r\n\r\n      {request.responseBody && (\r\n        <Section>\r\n          <SectionTitle>Response Body</SectionTitle>\r\n          <CodeBlock>{formatBody(request.responseBody)}</CodeBlock>\r\n        </Section>\r\n      )}\r\n\r\n      {request.error && (\r\n        <Section>\r\n          <SectionTitle>Error</SectionTitle>\r\n          <CodeBlock style={{ color: props => props.theme.colors.error }}>\r\n            {request.error.message}\r\n            {request.error.stack && `\\n\\n${request.error.stack}`}\r\n          </CodeBlock>\r\n        </Section>\r\n      )}\r\n    </Container>\r\n  );\r\n}; "]}