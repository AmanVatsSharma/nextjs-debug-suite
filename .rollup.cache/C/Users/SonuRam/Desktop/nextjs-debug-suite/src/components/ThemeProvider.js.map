{"version":3,"file":"ThemeProvider.js","sourceRoot":"","sources":["ThemeProvider.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,aAAa,IAAI,oBAAoB,EAAE,MAAM,gBAAgB,CAAC;AACvE,OAAO,EAAE,UAAU,EAAE,SAAS,EAAS,MAAM,gBAAgB,CAAC;AAO9D,MAAM,CAAC,IAAM,aAAa,GAAiC,UAAC,EAG3D;QAFC,QAAQ,cAAA,EACR,cAAc,EAAd,MAAM,mBAAG,KAAK,KAAA;IAEd,IAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,UAAU,CAAC;IAE9C,OAAO,CACL,oBAAC,oBAAoB,IAAC,KAAK,EAAE,KAAK,IAC/B,QAAQ,CACY,CACxB,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import React from 'react';\r\nimport { ThemeProvider as EmotionThemeProvider } from '@emotion/react';\r\nimport { lightTheme, darkTheme, Theme } from './styles/theme';\r\n\r\ninterface ThemeProviderProps {\r\n  children: React.ReactNode;\r\n  isDark?: boolean;\r\n}\r\n\r\nexport const ThemeProvider: React.FC<ThemeProviderProps> = ({\r\n  children,\r\n  isDark = false,\r\n}) => {\r\n  const theme = isDark ? darkTheme : lightTheme;\r\n\r\n  return (\r\n    <EmotionThemeProvider theme={theme}>\r\n      {children}\r\n    </EmotionThemeProvider>\r\n  );\r\n}; "]}