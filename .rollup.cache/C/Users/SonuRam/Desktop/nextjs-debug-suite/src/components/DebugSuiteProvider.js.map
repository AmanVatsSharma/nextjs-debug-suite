{"version":3,"file":"DebugSuiteProvider.js","sourceRoot":"","sources":["DebugSuiteProvider.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { createContext, useContext, useState, useCallback } from 'react';\nimport type { DebugConfig, DebugData } from '../types/debug';\n\ninterface DebugContextValue {\n  config: DebugConfig;\n  data: DebugData;\n  clearData: (tab: string) => void;\n  exportData: (tab: string) => any;\n}\n\nconst DebugContext = createContext<DebugContextValue | undefined>(undefined);\n\nexport const useDebugContext = () => {\n  const context = useContext(DebugContext);\n  if (!context) {\n    throw new Error('useDebugContext must be used within a DebugSuiteProvider');\n  }\n  return context;\n};\n\ninterface DebugSuiteProviderProps {\n  children: React.ReactNode;\n  config: DebugConfig;\n}\n\nexport const DebugSuiteProvider: React.FC<DebugSuiteProviderProps> = ({\n  children,\n  config: initialConfig,\n}) => {\n  const [config] = useState(initialConfig);\n  const [data, setData] = useState<DebugData>({\n    errors: [],\n    performance: {\n      metrics: [],\n      memory: [],\n      renders: []\n    },\n    network: {\n      requests: [],\n      responses: []\n    },\n    console: {\n      logs: [],\n      warnings: [],\n      errors: []\n    },\n    ai: {\n      suggestions: [],\n      analysis: []\n    }\n  });\n\n  const clearData = useCallback((tab: string) => {\n    setData(prev => {\n      const newData = { ...prev };\n      switch (tab) {\n        case 'errors':\n          newData.errors = [];\n          break;\n        case 'performance':\n          newData.performance = {\n            metrics: [],\n            memory: [],\n            renders: []\n          };\n          break;\n        case 'network':\n          newData.network = {\n            requests: [],\n            responses: []\n          };\n          break;\n        case 'console':\n          newData.console = {\n            logs: [],\n            warnings: [],\n            errors: []\n          };\n          break;\n        case 'ai':\n          newData.ai = {\n            suggestions: [],\n            analysis: []\n          };\n          break;\n      }\n      return newData;\n    });\n  }, []);\n\n  const exportData = useCallback((tab: string) => {\n    switch (tab) {\n      case 'errors':\n        return { errors: data.errors };\n      case 'performance':\n        return { performance: data.performance };\n      case 'network':\n        return { network: data.network };\n      case 'console':\n        return { console: data.console };\n      case 'ai':\n        return { ai: data.ai };\n      default:\n        return data;\n    }\n  }, [data]);\n\n  const value = {\n    config,\n    data,\n    clearData,\n    exportData\n  };\n\n  return (\n    <DebugContext.Provider value={value}>\n      {children}\n    </DebugContext.Provider>\n  );\n}; "]}