{"version":3,"file":"DebugOverlay.js","sourceRoot":"","sources":["DebugOverlay.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport { ThemeProvider } from '@emotion/react';\r\nimport { motion, PanInfo } from 'framer-motion';\r\nimport { MdDragIndicator } from 'react-icons/md';\r\nimport { useDebugContext } from './DebugSuiteProvider';\r\nimport { getTheme } from './styles/theme';\r\nimport {\r\n  OverlayContainer,\r\n  TabBar,\r\n  Tab,\r\n  ContentArea,\r\n  ActionBar,\r\n  Button,\r\n  ResizeHandle,\r\n} from './styles/DebugOverlay.styles';\r\n\r\n// Import tab content components\r\nimport { ErrorsTab } from './tabs/ErrorsTab';\r\nimport { PerformanceTab } from './tabs/PerformanceTab';\r\nimport { NetworkTab } from './tabs/NetworkTab';\r\nimport { ConsoleTab } from './tabs/ConsoleTab';\r\nimport { AITab } from './tabs/AITab';\r\n\r\nexport const DebugOverlay: React.FC = () => {\r\n  const { config, clearData, exportData } = useDebugContext();\r\n  const [activeTab, setActiveTab] = useState(config.overlay.tabs[0]);\r\n  const [size, setSize] = useState(config.overlay.size);\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [isResizing, setIsResizing] = useState(false);\r\n  const theme = getTheme(config.overlay.theme);\r\n\r\n  const handleResize = useCallback(\r\n    (_: any, info: PanInfo) => {\r\n      setSize(prev => ({\r\n        width: Math.max(300, prev.width + info.delta.x),\r\n        height: Math.max(200, prev.height + info.delta.y),\r\n      }));\r\n    },\r\n    []\r\n  );\r\n\r\n  const handleClear = useCallback(() => {\r\n    clearData(activeTab);\r\n  }, [clearData, activeTab]);\r\n\r\n  const handleExport = useCallback(() => {\r\n    const data = exportData(activeTab);\r\n    const fileName = `debug-data-${activeTab}-${new Date().toISOString()}.json`;\r\n    const jsonString = JSON.stringify(data, null, 2);\r\n    const blob = new Blob([jsonString], { type: 'application/json' });\r\n    const url = URL.createObjectURL(blob);\r\n    \r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.download = fileName;\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n    URL.revokeObjectURL(url);\r\n  }, [exportData, activeTab]);\r\n\r\n  const renderTabContent = () => {\r\n    switch (activeTab) {\r\n      case 'errors':\r\n        return <ErrorsTab />;\r\n      case 'performance':\r\n        return <PerformanceTab />;\r\n      case 'network':\r\n        return <NetworkTab />;\r\n      case 'console':\r\n        return <ConsoleTab />;\r\n      case 'ai':\r\n        return <AITab />;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <OverlayContainer\r\n        data-testid=\"overlay-container\"\r\n        position={config.overlay.position}\r\n        size={size}\r\n        opacity={config.overlay.opacity}\r\n        drag\r\n        dragMomentum={false}\r\n        dragListener={!isResizing}\r\n        onDragStart={() => setIsDragging(true)}\r\n        onDragEnd={() => setIsDragging(false)}\r\n        initial={{ scale: 0.9, opacity: 0 }}\r\n        animate={{ scale: 1, opacity: config.overlay.opacity }}\r\n        exit={{ scale: 0.9, opacity: 0 }}\r\n      >\r\n        <TabBar>\r\n          {config.overlay.tabs.map(tab => (\r\n            <Tab\r\n              key={tab}\r\n              data-testid={`${tab}-tab`}\r\n              active={activeTab === tab}\r\n              onClick={() => setActiveTab(tab)}\r\n            >\r\n              {tab.charAt(0).toUpperCase() + tab.slice(1)}\r\n            </Tab>\r\n          ))}\r\n        </TabBar>\r\n\r\n        <ContentArea>\r\n          {renderTabContent()}\r\n        </ContentArea>\r\n\r\n        <ActionBar>\r\n          <Button onClick={handleClear}>Clear</Button>\r\n          <Button onClick={handleExport}>Export</Button>\r\n        </ActionBar>\r\n\r\n        <ResizeHandle\r\n          drag\r\n          dragMomentum={false}\r\n          dragConstraints={{ top: 0, left: 0, right: 0, bottom: 0 }}\r\n          onDragStart={() => setIsResizing(true)}\r\n          onDrag={handleResize}\r\n          onDragEnd={() => setIsResizing(false)}\r\n        >\r\n          <MdDragIndicator size={16} />\r\n        </ResizeHandle>\r\n      </OverlayContainer>\r\n    </ThemeProvider>\r\n  );\r\n}; "]}