{"version":3,"file":"DependencyVisualizer.js","sourceRoot":"","sources":["DependencyVisualizer.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { motion } from 'framer-motion';\r\nimport type { DependencyGraph } from '../../core/errorDNA/dependencyAnalyzer';\r\n\r\nconst Container = styled(motion.div)`\r\n  width: 100%;\r\n  height: 300px;\r\n  background: ${props => props.theme.colors.background.primary};\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  position: relative;\r\n`;\r\n\r\nconst Canvas = styled.canvas`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\ninterface DependencyVisualizerProps {\r\n  graph: DependencyGraph;\r\n  errorNodeId?: string;\r\n}\r\n\r\nexport const DependencyVisualizer: React.FC<DependencyVisualizerProps> = ({\r\n  graph,\r\n  errorNodeId,\r\n}) => {\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) return;\r\n\r\n    const ctx = canvas.getContext('2d');\r\n    if (!ctx) return;\r\n\r\n    // Set canvas size to match display size\r\n    const { width, height } = canvas.getBoundingClientRect();\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n\r\n    // Clear canvas\r\n    ctx.clearRect(0, 0, width, height);\r\n\r\n    // Calculate node positions using force-directed layout\r\n    const nodes = Object.values(graph.nodes);\r\n    const nodePositions = calculateNodePositions(nodes, width, height);\r\n\r\n    // Draw edges\r\n    ctx.strokeStyle = '#666666';\r\n    ctx.lineWidth = 1;\r\n    graph.edges.forEach(edge => {\r\n      const fromPos = nodePositions.get(edge.from);\r\n      const toPos = nodePositions.get(edge.to);\r\n      if (fromPos && toPos) {\r\n        ctx.beginPath();\r\n        ctx.moveTo(fromPos.x, fromPos.y);\r\n        ctx.lineTo(toPos.x, toPos.y);\r\n        ctx.stroke();\r\n      }\r\n    });\r\n\r\n    // Draw nodes\r\n    nodes.forEach(node => {\r\n      const pos = nodePositions.get(node.id);\r\n      if (!pos) return;\r\n\r\n      ctx.beginPath();\r\n      ctx.arc(pos.x, pos.y, 5, 0, Math.PI * 2);\r\n      \r\n      if (node.id === errorNodeId) {\r\n        ctx.fillStyle = '#ff0000';\r\n      } else {\r\n        ctx.fillStyle = getNodeColor(node.type);\r\n      }\r\n      \r\n      ctx.fill();\r\n\r\n      // Draw node label\r\n      ctx.fillStyle = '#ffffff';\r\n      ctx.font = '12px Arial';\r\n      ctx.textAlign = 'center';\r\n      ctx.fillText(node.name, pos.x, pos.y + 20);\r\n    });\r\n  }, [graph, errorNodeId]);\r\n\r\n  return (\r\n    <Container\r\n      initial={{ opacity: 0, scale: 0.9 }}\r\n      animate={{ opacity: 1, scale: 1 }}\r\n      transition={{ duration: 0.3 }}\r\n    >\r\n      <Canvas ref={canvasRef} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nfunction getNodeColor(type: string): string {\r\n  switch (type) {\r\n    case 'component':\r\n      return '#4caf50';\r\n    case 'module':\r\n      return '#2196f3';\r\n    case 'function':\r\n      return '#ff9800';\r\n    case 'hook':\r\n      return '#9c27b0';\r\n    default:\r\n      return '#757575';\r\n  }\r\n}\r\n\r\ninterface NodePosition {\r\n  x: number;\r\n  y: number;\r\n  vx: number;\r\n  vy: number;\r\n}\r\n\r\nfunction calculateNodePositions(nodes: any[], width: number, height: number): Map<string, { x: number; y: number }> {\r\n  const positions = new Map<string, NodePosition>();\r\n  \r\n  // Initialize random positions\r\n  nodes.forEach(node => {\r\n    positions.set(node.id, {\r\n      x: Math.random() * width,\r\n      y: Math.random() * height,\r\n      vx: 0,\r\n      vy: 0,\r\n    });\r\n  });\r\n\r\n  // Simple force-directed layout simulation\r\n  const iterations = 50;\r\n  for (let i = 0; i < iterations; i++) {\r\n    // Apply repulsive forces between all nodes\r\n    nodes.forEach(node1 => {\r\n      nodes.forEach(node2 => {\r\n        if (node1.id === node2.id) return;\r\n\r\n        const pos1 = positions.get(node1.id)!;\r\n        const pos2 = positions.get(node2.id)!;\r\n\r\n        const dx = pos2.x - pos1.x;\r\n        const dy = pos2.y - pos1.y;\r\n        const distance = Math.sqrt(dx * dx + dy * dy);\r\n\r\n        if (distance === 0) return;\r\n\r\n        const force = 1000 / (distance * distance);\r\n        const fx = (dx / distance) * force;\r\n        const fy = (dy / distance) * force;\r\n\r\n        pos1.vx -= fx;\r\n        pos1.vy -= fy;\r\n        pos2.vx += fx;\r\n        pos2.vy += fy;\r\n      });\r\n    });\r\n\r\n    // Update positions\r\n    positions.forEach(pos => {\r\n      pos.x += pos.vx * 0.1;\r\n      pos.y += pos.vy * 0.1;\r\n      pos.vx *= 0.9;\r\n      pos.vy *= 0.9;\r\n\r\n      // Keep nodes within bounds\r\n      pos.x = Math.max(10, Math.min(width - 10, pos.x));\r\n      pos.y = Math.max(10, Math.min(height - 10, pos.y));\r\n    });\r\n  }\r\n\r\n  // Convert NodePosition to simple {x, y} coordinates\r\n  const finalPositions = new Map<string, { x: number; y: number }>();\r\n  positions.forEach((pos, id) => {\r\n    finalPositions.set(id, { x: pos.x, y: pos.y });\r\n  });\r\n\r\n  return finalPositions;\r\n} "]}