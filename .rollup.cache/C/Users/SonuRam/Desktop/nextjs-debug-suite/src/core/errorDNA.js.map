{"version":3,"file":"errorDNA.js","sourceRoot":"","sources":["errorDNA.ts"],"names":[],"mappings":"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","sourcesContent":["import { parse as parseStackTrace } from 'stacktrace-parser';\r\nimport { debug } from './debug';\r\n\r\nexport interface ErrorDNA {\r\n  id: string;\r\n  timestamp: number;\r\n  error: Error;\r\n  message: string;\r\n  stack?: string;\r\n  componentStack?: string;\r\n  frames?: Array<{\r\n    file?: string;\r\n    methodName?: string;\r\n    lineNumber?: number;\r\n    column?: number;\r\n  }>;\r\n  context?: {\r\n    componentName?: string;\r\n    props?: Record<string, any>;\r\n    state?: Record<string, any>;\r\n    [key: string]: any;\r\n  };\r\n  metadata?: {\r\n    browser?: string;\r\n    os?: string;\r\n    url?: string;\r\n    [key: string]: any;\r\n  };\r\n  severity: 'low' | 'medium' | 'high' | 'critical';\r\n  frequency: number;\r\n  lastOccurrence: number;\r\n  firstOccurrence: number;\r\n  resolved: boolean;\r\n  aiAnalysis?: {\r\n    summary?: string;\r\n    suggestedFix?: string;\r\n    confidence?: number;\r\n    relatedIssues?: string[];\r\n  };\r\n}\r\n\r\nexport class ErrorDNAAnalyzer {\r\n  private debug = debug;\r\n  private errors: Map<string, ErrorDNA> = new Map();\r\n  private errorCallbacks: ((error: ErrorDNA) => void)[] = [];\r\n  private maxErrors = 1000;\r\n\r\n  constructor() {\r\n    if (typeof window !== 'undefined') {\r\n      this.setupGlobalHandlers();\r\n    }\r\n  }\r\n\r\n  private setupGlobalHandlers() {\r\n    window.onerror = (message, source, line, column, error) => {\r\n      if (error) {\r\n        this.captureError(error, { source, line, column });\r\n      } else {\r\n        this.captureError(new Error(message as string), { source, line, column });\r\n      }\r\n      return false;\r\n    };\r\n\r\n    window.onunhandledrejection = (event) => {\r\n      const error = event.reason instanceof Error ? event.reason : new Error(String(event.reason));\r\n      this.captureError(error, { type: 'unhandledRejection' });\r\n    };\r\n  }\r\n\r\n  captureError(error: Error, context: Record<string, any> = {}) {\r\n    const dna = this.createErrorDNA(error, context);\r\n    const existingError = this.findSimilarError(dna);\r\n\r\n    if (existingError) {\r\n      existingError.frequency += 1;\r\n      existingError.lastOccurrence = Date.now();\r\n      this.errors.set(existingError.id, existingError);\r\n      this.notifyErrorCallbacks(existingError);\r\n    } else {\r\n      this.errors.set(dna.id, dna);\r\n      this.notifyErrorCallbacks(dna);\r\n\r\n      if (this.errors.size > this.maxErrors) {\r\n        const oldestError = Array.from(this.errors.values())\r\n          .sort((a, b) => a.lastOccurrence - b.lastOccurrence)[0];\r\n        this.errors.delete(oldestError.id);\r\n      }\r\n    }\r\n\r\n    this.debug.log('ERROR', error.message, dna);\r\n    return dna;\r\n  }\r\n\r\n  private createErrorDNA(error: Error, context: Record<string, any> = {}): ErrorDNA {\r\n    const timestamp = Date.now();\r\n    const frames = error.stack ? parseStackTrace(error.stack) : undefined;\r\n\r\n    const dna: ErrorDNA = {\r\n      id: Math.random().toString(36).substring(7),\r\n      timestamp,\r\n      error,\r\n      message: error.message,\r\n      stack: error.stack,\r\n      frames,\r\n      context: {\r\n        ...context,\r\n        componentName: this.extractComponentName(frames),\r\n      },\r\n      metadata: {\r\n        browser: this.getBrowserInfo(),\r\n        os: this.getOSInfo(),\r\n        url: typeof window !== 'undefined' ? window.location.href : undefined,\r\n      },\r\n      severity: this.calculateSeverity(error, context),\r\n      frequency: 1,\r\n      lastOccurrence: timestamp,\r\n      firstOccurrence: timestamp,\r\n      resolved: false,\r\n    };\r\n\r\n    return dna;\r\n  }\r\n\r\n  private findSimilarError(dna: ErrorDNA): ErrorDNA | undefined {\r\n    return Array.from(this.errors.values()).find(existing => \r\n      existing.message === dna.message &&\r\n      existing.context?.componentName === dna.context?.componentName &&\r\n      this.compareStacks(existing.frames, dna.frames)\r\n    );\r\n  }\r\n\r\n  private compareStacks(stack1?: Array<any>, stack2?: Array<any>): boolean {\r\n    if (!stack1 || !stack2) return false;\r\n    if (stack1.length !== stack2.length) return false;\r\n\r\n    return stack1.every((frame, index) => \r\n      frame.file === stack2[index].file &&\r\n      frame.methodName === stack2[index].methodName\r\n    );\r\n  }\r\n\r\n  private calculateSeverity(error: Error, context: Record<string, any>): ErrorDNA['severity'] {\r\n    if (error instanceof TypeError || error instanceof ReferenceError) {\r\n      return 'high';\r\n    }\r\n\r\n    if (context.type === 'unhandledRejection') {\r\n      return 'critical';\r\n    }\r\n\r\n    if (error.message.toLowerCase().includes('network') || \r\n        error.message.toLowerCase().includes('fetch') ||\r\n        error.message.toLowerCase().includes('xhr')) {\r\n      return 'medium';\r\n    }\r\n\r\n    return 'low';\r\n  }\r\n\r\n  private extractComponentName(frames?: Array<any>): string | undefined {\r\n    if (!frames?.length) return undefined;\r\n\r\n    const componentFrame = frames.find(frame => {\r\n      const methodName = frame.methodName || '';\r\n      return (\r\n        methodName.includes('render') ||\r\n        methodName.includes('component') ||\r\n        methodName.includes('React')\r\n      );\r\n    });\r\n\r\n    return componentFrame?.methodName?.split('.')[0];\r\n  }\r\n\r\n  private getBrowserInfo(): string {\r\n    if (typeof window === 'undefined') return 'unknown';\r\n    \r\n    const ua = window.navigator.userAgent;\r\n    const browsers = [\r\n      { name: 'Chrome', pattern: /Chrome\\/(\\d+)/ },\r\n      { name: 'Firefox', pattern: /Firefox\\/(\\d+)/ },\r\n      { name: 'Safari', pattern: /Version\\/(\\d+).*Safari/ },\r\n      { name: 'Edge', pattern: /Edg\\/(\\d+)/ },\r\n    ];\r\n\r\n    for (const browser of browsers) {\r\n      const match = ua.match(browser.pattern);\r\n      if (match) {\r\n        return `${browser.name} ${match[1]}`;\r\n      }\r\n    }\r\n\r\n    return 'unknown';\r\n  }\r\n\r\n  private getOSInfo(): string {\r\n    if (typeof window === 'undefined') return 'unknown';\r\n    \r\n    const ua = window.navigator.userAgent;\r\n    const os = [\r\n      { name: 'Windows', pattern: /Windows NT (\\d+\\.\\d+)/ },\r\n      { name: 'Mac', pattern: /Mac OS X (\\d+[._]\\d+)/ },\r\n      { name: 'Linux', pattern: /Linux/ },\r\n      { name: 'iOS', pattern: /iOS (\\d+)/ },\r\n      { name: 'Android', pattern: /Android (\\d+)/ },\r\n    ];\r\n\r\n    for (const system of os) {\r\n      const match = ua.match(system.pattern);\r\n      if (match) {\r\n        return `${system.name} ${match[1] || ''}`.trim();\r\n      }\r\n    }\r\n\r\n    return 'unknown';\r\n  }\r\n\r\n  getErrors(filter?: {\r\n    severity?: ErrorDNA['severity'];\r\n    resolved?: boolean;\r\n    componentName?: string;\r\n  }): ErrorDNA[] {\r\n    let errors = Array.from(this.errors.values());\r\n\r\n    if (filter) {\r\n      errors = errors.filter(error => {\r\n        if (filter.severity && error.severity !== filter.severity) return false;\r\n        if (filter.resolved !== undefined && error.resolved !== filter.resolved) return false;\r\n        if (filter.componentName && error.context?.componentName !== filter.componentName) return false;\r\n        return true;\r\n      });\r\n    }\r\n\r\n    return errors.sort((a, b) => b.lastOccurrence - a.lastOccurrence);\r\n  }\r\n\r\n  getError(id: string): ErrorDNA | undefined {\r\n    return this.errors.get(id);\r\n  }\r\n\r\n  updateError(id: string, updates: Partial<ErrorDNA>): ErrorDNA | undefined {\r\n    const error = this.errors.get(id);\r\n    if (!error) return undefined;\r\n\r\n    const updatedError = { ...error, ...updates };\r\n    this.errors.set(id, updatedError);\r\n    return updatedError;\r\n  }\r\n\r\n  resolveError(id: string): ErrorDNA | undefined {\r\n    return this.updateError(id, { resolved: true });\r\n  }\r\n\r\n  clearErrors() {\r\n    this.errors.clear();\r\n  }\r\n\r\n  onError(callback: (error: ErrorDNA) => void) {\r\n    this.errorCallbacks.push(callback);\r\n    return () => {\r\n      const index = this.errorCallbacks.indexOf(callback);\r\n      if (index > -1) {\r\n        this.errorCallbacks.splice(index, 1);\r\n      }\r\n    };\r\n  }\r\n\r\n  private notifyErrorCallbacks(error: ErrorDNA) {\r\n    this.errorCallbacks.forEach(callback => callback(error));\r\n  }\r\n\r\n  destroy() {\r\n    if (typeof window !== 'undefined') {\r\n      window.onerror = null;\r\n      window.onunhandledrejection = null;\r\n    }\r\n    this.errorCallbacks = [];\r\n    this.errors.clear();\r\n  }\r\n} "]}