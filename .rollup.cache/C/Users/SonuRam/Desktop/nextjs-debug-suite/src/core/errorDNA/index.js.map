{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":"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","sourcesContent":["import type { StackTraceParser } from './stackTraceParser';\r\nimport type { DependencyAnalyzer } from './dependencyAnalyzer';\r\nimport type { EnhancedErrorDNA } from '../types';\r\n\r\nexport class ErrorDNA {\r\n  constructor(\r\n    private stackTraceParser: StackTraceParser,\r\n    private dependencyAnalyzer: DependencyAnalyzer\r\n  ) {}\r\n\r\n  async analyze(error: Error): Promise<EnhancedErrorDNA> {\r\n    const stackTrace = this.stackTraceParser.parse(error.stack || '');\r\n    const firstFrame = stackTrace[0];\r\n\r\n    const errorDNA: EnhancedErrorDNA = {\r\n      id: this.generateErrorId(),\r\n      timestamp: Date.now(),\r\n      type: this.determineErrorType(error),\r\n      location: {\r\n        file: firstFrame?.fileName || 'unknown',\r\n        line: firstFrame?.lineNumber || 0,\r\n        column: firstFrame?.columnNumber || 0,\r\n        functionName: firstFrame?.functionName || 'unknown',\r\n        component: this.extractComponentName(firstFrame?.functionName)\r\n      },\r\n      visual: {\r\n        codePreview: error.stack?.split('\\n')[0] || error.message,\r\n        highlightedLines: [firstFrame?.lineNumber || 0],\r\n        dependencies: await this.getDependencyGraph(firstFrame?.fileName),\r\n        stackTrace: stackTrace\r\n      }\r\n    };\r\n\r\n    if (firstFrame?.fileName?.includes('node_modules')) {\r\n      errorDNA.package = this.extractPackageInfo(firstFrame.fileName);\r\n    }\r\n\r\n    return errorDNA;\r\n  }\r\n\r\n  private generateErrorId(): string {\r\n    return `err_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n  }\r\n\r\n  private determineErrorType(error: Error): EnhancedErrorDNA['type'] {\r\n    if (error instanceof TypeError || error instanceof ReferenceError) {\r\n      return 'runtime';\r\n    }\r\n    if (error.message.includes('network') || error.message.includes('fetch')) {\r\n      return 'network';\r\n    }\r\n    if (error.message.includes('type') || error.message.includes('TypeScript')) {\r\n      return 'type';\r\n    }\r\n    if (error.message.includes('performance') || error.message.includes('timeout')) {\r\n      return 'performance';\r\n    }\r\n    return 'runtime';\r\n  }\r\n\r\n  private extractComponentName(functionName?: string): string | undefined {\r\n    if (!functionName) return undefined;\r\n\r\n    // Common React component patterns\r\n    const patterns = [\r\n      /^[A-Z][a-zA-Z]*$/, // Simple component name\r\n      /^[A-Z][a-zA-Z]*Component$/, // Suffixed with Component\r\n      /^use[A-Z][a-zA-Z]*$/, // Hook name\r\n      /^render[A-Z][a-zA-Z]*$/ // Render method\r\n    ];\r\n\r\n    for (const pattern of patterns) {\r\n      const match = functionName.match(pattern);\r\n      if (match) return match[0];\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n  private extractPackageInfo(filePath: string): EnhancedErrorDNA['package'] {\r\n    const parts = filePath.split('node_modules/');\r\n    if (parts.length < 2) return undefined;\r\n\r\n    const packagePath = parts[1].split('/');\r\n    const scopedPackage = packagePath[0].startsWith('@');\r\n    \r\n    return {\r\n      name: scopedPackage ? `${packagePath[0]}/${packagePath[1]}` : packagePath[0],\r\n      version: 'unknown', // Would need package.json analysis for this\r\n      path: packagePath\r\n    };\r\n  }\r\n\r\n  async getDependencyGraph(filePath?: string) {\r\n    if (!filePath) return {};\r\n    try {\r\n      return await this.dependencyAnalyzer.getDependencyGraph(filePath);\r\n    } catch (error) {\r\n      return {};\r\n    }\r\n  }\r\n\r\n  async getImports(filePath: string) {\r\n    try {\r\n      return await this.dependencyAnalyzer.getImports(filePath);\r\n    } catch (error) {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  async getExports(filePath: string) {\r\n    try {\r\n      return await this.dependencyAnalyzer.getExports(filePath);\r\n    } catch (error) {\r\n      return [];\r\n    }\r\n  }\r\n} "]}