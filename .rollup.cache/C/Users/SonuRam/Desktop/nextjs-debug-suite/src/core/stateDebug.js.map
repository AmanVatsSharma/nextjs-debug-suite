{"version":3,"file":"stateDebug.js","sourceRoot":"","sources":["stateDebug.ts"],"names":[],"mappings":"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","sourcesContent":["import { debug } from './debug';\r\n\r\nexport interface StateChange {\r\n  id: string;\r\n  timestamp: number;\r\n  type: 'redux' | 'context' | 'useState' | 'custom';\r\n  componentName?: string;\r\n  action?: {\r\n    type: string;\r\n    payload?: any;\r\n  };\r\n  prevState: any;\r\n  nextState: any;\r\n  diff?: {\r\n    added?: Record<string, any>;\r\n    removed?: Record<string, any>;\r\n    updated?: Record<string, any>;\r\n  };\r\n}\r\n\r\nexport class StateDebugMonitor {\r\n  private debug = debug;\r\n  private changes: StateChange[] = [];\r\n  private maxChanges = 1000;\r\n  private changeCallbacks: ((change: StateChange) => void)[] = [];\r\n  private reduxMiddleware?: any;\r\n  private contextPatches = new Map<string, any>();\r\n\r\n  trackReduxChanges() {\r\n    this.reduxMiddleware = (store: any) => (next: any) => (action: any) => {\r\n      const prevState = store.getState();\r\n      const result = next(action);\r\n      const nextState = store.getState();\r\n\r\n      this.captureChange({\r\n        type: 'redux',\r\n        action: {\r\n          type: action.type,\r\n          payload: action.payload\r\n        },\r\n        prevState,\r\n        nextState\r\n      });\r\n\r\n      return result;\r\n    };\r\n\r\n    return this.reduxMiddleware;\r\n  }\r\n\r\n  trackContextChanges(contextName: string, prevValue: any, nextValue: any) {\r\n    const patch = this.contextPatches.get(contextName);\r\n    const timestamp = Date.now();\r\n\r\n    if (patch && timestamp - patch.timestamp < 100) {\r\n      // Debounce rapid context changes\r\n      this.contextPatches.set(contextName, {\r\n        timestamp,\r\n        prevValue: patch.prevValue,\r\n        nextValue\r\n      });\r\n    } else {\r\n      this.contextPatches.set(contextName, {\r\n        timestamp,\r\n        prevValue,\r\n        nextValue\r\n      });\r\n\r\n      this.captureChange({\r\n        type: 'context',\r\n        componentName: contextName,\r\n        prevState: prevValue,\r\n        nextState: nextValue\r\n      });\r\n    }\r\n  }\r\n\r\n  trackStateChanges(componentName: string, hookId: string, prevState: any, nextState: any) {\r\n    this.captureChange({\r\n      type: 'useState',\r\n      componentName,\r\n      action: { type: `${componentName}:${hookId}` },\r\n      prevState,\r\n      nextState\r\n    });\r\n  }\r\n\r\n  trackCustomChanges(name: string, prevState: any, nextState: any, metadata?: Record<string, any>) {\r\n    this.captureChange({\r\n      type: 'custom',\r\n      componentName: name,\r\n      prevState,\r\n      nextState,\r\n      ...metadata\r\n    });\r\n  }\r\n\r\n  private captureChange(change: Partial<StateChange>) {\r\n    const timestamp = Date.now();\r\n    const id = Math.random().toString(36).substring(7);\r\n\r\n    const stateChange: StateChange = {\r\n      id,\r\n      timestamp,\r\n      type: change.type || 'custom',\r\n      componentName: change.componentName,\r\n      action: change.action,\r\n      prevState: change.prevState,\r\n      nextState: change.nextState,\r\n      diff: this.calculateDiff(change.prevState, change.nextState)\r\n    };\r\n\r\n    this.changes.unshift(stateChange);\r\n    if (this.changes.length > this.maxChanges) {\r\n      this.changes = this.changes.slice(0, this.maxChanges);\r\n    }\r\n\r\n    this.debug.log('STATE', `${stateChange.type} change in ${stateChange.componentName || 'unknown'}`, stateChange);\r\n    this.notifyChangeCallbacks(stateChange);\r\n  }\r\n\r\n  private calculateDiff(prev: any, next: any): StateChange['diff'] {\r\n    if (!prev || !next) return {};\r\n    \r\n    const added: Record<string, any> = {};\r\n    const removed: Record<string, any> = {};\r\n    const updated: Record<string, any> = {};\r\n\r\n    // Find added and updated\r\n    Object.keys(next).forEach(key => {\r\n      if (!(key in prev)) {\r\n        added[key] = next[key];\r\n      } else if (prev[key] !== next[key]) {\r\n        updated[key] = {\r\n          from: prev[key],\r\n          to: next[key]\r\n        };\r\n      }\r\n    });\r\n\r\n    // Find removed\r\n    Object.keys(prev).forEach(key => {\r\n      if (!(key in next)) {\r\n        removed[key] = prev[key];\r\n      }\r\n    });\r\n\r\n    return {\r\n      added: Object.keys(added).length ? added : undefined,\r\n      removed: Object.keys(removed).length ? removed : undefined,\r\n      updated: Object.keys(updated).length ? updated : undefined\r\n    };\r\n  }\r\n\r\n  getChanges(filter?: {\r\n    type?: StateChange['type'];\r\n    componentName?: string;\r\n    actionType?: string;\r\n  }): StateChange[] {\r\n    if (!filter) return this.changes;\r\n\r\n    return this.changes.filter(change => {\r\n      if (filter.type && change.type !== filter.type) return false;\r\n      if (filter.componentName && change.componentName !== filter.componentName) return false;\r\n      if (filter.actionType && change.action?.type !== filter.actionType) return false;\r\n      return true;\r\n    });\r\n  }\r\n\r\n  getChange(id: string): StateChange | undefined {\r\n    return this.changes.find(change => change.id === id);\r\n  }\r\n\r\n  getLatestChange(componentName?: string): StateChange | undefined {\r\n    if (componentName) {\r\n      return this.changes.find(change => change.componentName === componentName);\r\n    }\r\n    return this.changes[0];\r\n  }\r\n\r\n  clearChanges() {\r\n    this.changes = [];\r\n    this.contextPatches.clear();\r\n  }\r\n\r\n  onChange(callback: (change: StateChange) => void) {\r\n    this.changeCallbacks.push(callback);\r\n    return () => {\r\n      const index = this.changeCallbacks.indexOf(callback);\r\n      if (index > -1) {\r\n        this.changeCallbacks.splice(index, 1);\r\n      }\r\n    };\r\n  }\r\n\r\n  private notifyChangeCallbacks(change: StateChange) {\r\n    this.changeCallbacks.forEach(callback => callback(change));\r\n  }\r\n\r\n  destroy() {\r\n    this.changeCallbacks = [];\r\n    this.clearChanges();\r\n  }\r\n} "]}