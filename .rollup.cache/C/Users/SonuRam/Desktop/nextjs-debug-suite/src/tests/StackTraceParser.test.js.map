{"version":3,"file":"StackTraceParser.test.js","sourceRoot":"","sources":["StackTraceParser.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { StackTraceParser } from '../core/errorDNA/stackTraceParser';\r\n\r\ndescribe('StackTraceParser', () => {\r\n  let parser: StackTraceParser;\r\n\r\n  beforeEach(() => {\r\n    parser = new StackTraceParser();\r\n  });\r\n\r\n  it('should parse a Chrome stack trace', () => {\r\n    const stackTrace = `\r\n      at Component (webpack://my-app/src/components/Component.tsx:10:15)\r\n      at renderWithHooks (webpack://my-app/node_modules/react-dom/cjs/react-dom.development.js:14985:18)\r\n      at mountIndeterminateComponent (webpack://my-app/node_modules/react-dom/cjs/react-dom.development.js:17811:13)\r\n    `;\r\n\r\n    const frames = parser.parse(stackTrace);\r\n    expect(frames).toEqual([\r\n      {\r\n        fileName: 'my-app/src/components/Component.tsx',\r\n        lineNumber: 10,\r\n        columnNumber: 15,\r\n        functionName: 'Component',\r\n        source: 'webpack://my-app/src/components/Component.tsx'\r\n      },\r\n      {\r\n        fileName: 'my-app/node_modules/react-dom/cjs/react-dom.development.js',\r\n        lineNumber: 14985,\r\n        columnNumber: 18,\r\n        functionName: 'renderWithHooks',\r\n        source: 'webpack://my-app/node_modules/react-dom/cjs/react-dom.development.js'\r\n      },\r\n      {\r\n        fileName: 'my-app/node_modules/react-dom/cjs/react-dom.development.js',\r\n        lineNumber: 17811,\r\n        columnNumber: 13,\r\n        functionName: 'mountIndeterminateComponent',\r\n        source: 'webpack://my-app/node_modules/react-dom/cjs/react-dom.development.js'\r\n      }\r\n    ]);\r\n  });\r\n\r\n  it('should parse a Firefox stack trace', () => {\r\n    const stackTrace = `\r\n      TestError@http://localhost:3000/static/js/bundle.js:1234:5\r\n      Component@http://localhost:3000/static/js/main.chunk.js:567:8\r\n      dispatchEvent@http://localhost:3000/static/js/vendor.chunk.js:89:10\r\n    `;\r\n\r\n    const frames = parser.parse(stackTrace);\r\n    expect(frames).toEqual([\r\n      {\r\n        fileName: 'static/js/bundle.js',\r\n        lineNumber: 1234,\r\n        columnNumber: 5,\r\n        functionName: 'TestError',\r\n        source: 'http://localhost:3000/static/js/bundle.js'\r\n      },\r\n      {\r\n        fileName: 'static/js/main.chunk.js',\r\n        lineNumber: 567,\r\n        columnNumber: 8,\r\n        functionName: 'Component',\r\n        source: 'http://localhost:3000/static/js/main.chunk.js'\r\n      },\r\n      {\r\n        fileName: 'static/js/vendor.chunk.js',\r\n        lineNumber: 89,\r\n        columnNumber: 10,\r\n        functionName: 'dispatchEvent',\r\n        source: 'http://localhost:3000/static/js/vendor.chunk.js'\r\n      }\r\n    ]);\r\n  });\r\n\r\n  it('should normalize file names', () => {\r\n    const stackTrace = `\r\n      at Component (webpack://my-app/./src/components/Component.tsx:10:15)\r\n      at handleError (C:/Users/test/project/src/handlers/error.ts:20:10)\r\n      at process (./node_modules/process/index.js:30:5)\r\n    `;\r\n\r\n    const frames = parser.parse(stackTrace);\r\n    expect(frames.map(f => f.fileName)).toEqual([\r\n      'my-app/./src/components/Component.tsx',\r\n      'C:/Users/test/project/src/handlers/error.ts',\r\n      './node_modules/process/index.js'\r\n    ]);\r\n  });\r\n\r\n  it('should normalize function names', () => {\r\n    const stackTrace = `\r\n      at handleRequest[ashandler] (webpack://my-app/src/handlers/request.ts:10:15)\r\n      at <anonymous> (webpack://my-app/src/utils/async.ts:20:10)\r\n      at Module../src/components/Component.tsx (webpack://my-app/src/components/Component.tsx:30:5)\r\n    `;\r\n\r\n    const frames = parser.parse(stackTrace);\r\n    expect(frames.map(f => f.functionName)).toEqual([\r\n      'handleRequest[ashandler]',\r\n      'anonymous',\r\n      'Module../src/components/Component.tsx'\r\n    ]);\r\n  });\r\n\r\n  it('should handle empty stack traces', () => {\r\n    expect(parser.parse('')).toEqual([]);\r\n    expect(parser.parse(null as any)).toEqual([]);\r\n    expect(parser.parse(undefined as any)).toEqual([]);\r\n  });\r\n\r\n  it('should identify node modules', () => {\r\n    const frame = {\r\n      fileName: 'node_modules/react/index.js',\r\n      lineNumber: 1,\r\n      columnNumber: 1,\r\n      functionName: 'test'\r\n    };\r\n    expect(parser.isNodeModule(frame)).toBe(true);\r\n  });\r\n\r\n  it('should identify user code', () => {\r\n    const frame = {\r\n      fileName: 'src/components/App.tsx',\r\n      lineNumber: 1,\r\n      columnNumber: 1,\r\n      functionName: 'test'\r\n    };\r\n    expect(parser.isUserCode(frame)).toBe(true);\r\n  });\r\n}); "]}