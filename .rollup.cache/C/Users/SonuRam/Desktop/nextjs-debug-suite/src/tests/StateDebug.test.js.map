{"version":3,"file":"StateDebug.test.js","sourceRoot":"","sources":["StateDebug.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { StateDebugMonitor } from '../core/stateDebug';\r\nimport { debug } from '../core/debug';\r\n\r\njest.mock('../core/debug');\r\n\r\ndescribe('StateDebugMonitor', () => {\r\n  let monitor: StateDebugMonitor;\r\n\r\n  beforeEach(() => {\r\n    jest.clearAllMocks();\r\n    monitor = new StateDebugMonitor();\r\n  });\r\n\r\n  afterEach(() => {\r\n    monitor.destroy();\r\n  });\r\n\r\n  describe('trackStateChanges', () => {\r\n    it('should track state changes', () => {\r\n      const initialState = { count: 0 };\r\n      const newState = { count: 1 };\r\n\r\n      monitor.trackStateChanges('TestComponent', 'count', initialState, newState);\r\n\r\n      expect(debug.log).toHaveBeenCalledWith(\r\n        'STATE',\r\n        'useState change in TestComponent',\r\n        expect.objectContaining({\r\n          type: 'useState',\r\n          componentName: 'TestComponent',\r\n          prevState: initialState,\r\n          nextState: newState,\r\n          diff: {\r\n            updated: {\r\n              count: { from: 0, to: 1 }\r\n            }\r\n          }\r\n        })\r\n      );\r\n    });\r\n\r\n    it('should handle nested state changes', () => {\r\n      const initialState = { user: { name: 'John', age: 25 } };\r\n      const newState = { user: { name: 'John', age: 26 } };\r\n\r\n      monitor.trackStateChanges('TestComponent', 'user', initialState, newState);\r\n\r\n      expect(debug.log).toHaveBeenCalledWith(\r\n        'STATE',\r\n        'useState change in TestComponent',\r\n        expect.objectContaining({\r\n          type: 'useState',\r\n          componentName: 'TestComponent',\r\n          prevState: initialState,\r\n          nextState: newState,\r\n          diff: {\r\n            updated: {\r\n              user: {\r\n                from: { name: 'John', age: 25 },\r\n                to: { name: 'John', age: 26 }\r\n              }\r\n            }\r\n          }\r\n        })\r\n      );\r\n    });\r\n\r\n    it('should handle array state changes', () => {\r\n      const initialState = { items: [1, 2, 3] };\r\n      const newState = { items: [1, 2, 3, 4] };\r\n\r\n      monitor.trackStateChanges('TestComponent', 'items', initialState, newState);\r\n\r\n      expect(debug.log).toHaveBeenCalledWith(\r\n        'STATE',\r\n        'useState change in TestComponent',\r\n        expect.objectContaining({\r\n          type: 'useState',\r\n          componentName: 'TestComponent',\r\n          prevState: initialState,\r\n          nextState: newState,\r\n          diff: {\r\n            updated: {\r\n              items: {\r\n                from: [1, 2, 3],\r\n                to: [1, 2, 3, 4]\r\n              }\r\n            }\r\n          }\r\n        })\r\n      );\r\n    });\r\n  });\r\n\r\n  describe('trackContextChanges', () => {\r\n    it('should track context changes', () => {\r\n      const initialContext = { theme: 'light' };\r\n      const newContext = { theme: 'dark' };\r\n\r\n      monitor.trackContextChanges('ThemeContext', initialContext, newContext);\r\n\r\n      expect(debug.log).toHaveBeenCalledWith(\r\n        'STATE',\r\n        'context change in ThemeContext',\r\n        expect.objectContaining({\r\n          type: 'context',\r\n          componentName: 'ThemeContext',\r\n          prevState: initialContext,\r\n          nextState: newContext,\r\n          diff: {\r\n            updated: {\r\n              theme: {\r\n                from: 'light',\r\n                to: 'dark'\r\n              }\r\n            }\r\n          }\r\n        })\r\n      );\r\n    });\r\n\r\n    it('should handle complex context changes', () => {\r\n      const initialContext = { user: { loggedIn: false } };\r\n      const newContext = { user: { loggedIn: true, name: 'John' } };\r\n\r\n      monitor.trackContextChanges('UserContext', initialContext, newContext);\r\n\r\n      expect(debug.log).toHaveBeenCalledWith(\r\n        'STATE',\r\n        'context change in UserContext',\r\n        expect.objectContaining({\r\n          type: 'context',\r\n          componentName: 'UserContext',\r\n          prevState: initialContext,\r\n          nextState: newContext,\r\n          diff: {\r\n            updated: {\r\n              user: {\r\n                from: { loggedIn: false },\r\n                to: { loggedIn: true, name: 'John' }\r\n              }\r\n            }\r\n          }\r\n        })\r\n      );\r\n    });\r\n  });\r\n\r\n  describe('calculateDiff', () => {\r\n    it('should return null if states are identical', () => {\r\n      const state = { count: 1 };\r\n      const changes = monitor.getChanges();\r\n      expect(changes).toEqual([]);\r\n    });\r\n\r\n    it('should handle undefined and null values', () => {\r\n      const initialState = { value: undefined };\r\n      const newState = { value: null };\r\n\r\n      monitor.trackStateChanges('TestComponent', 'value', initialState, newState);\r\n\r\n      expect(debug.log).toHaveBeenCalledWith(\r\n        'STATE',\r\n        'useState change in TestComponent',\r\n        expect.objectContaining({\r\n          type: 'useState',\r\n          componentName: 'TestComponent',\r\n          prevState: initialState,\r\n          nextState: newState,\r\n          diff: {\r\n            updated: {\r\n              value: {\r\n                from: undefined,\r\n                to: null\r\n              }\r\n            }\r\n          }\r\n        })\r\n      );\r\n    });\r\n  });\r\n}); "]}