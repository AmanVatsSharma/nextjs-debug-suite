{"version":3,"file":"DependencyAnalyzer.test.js","sourceRoot":"","sources":["DependencyAnalyzer.test.ts"],"names":[],"mappings":"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","sourcesContent":["import * as ts from 'typescript';\r\nimport { DependencyAnalyzer } from '../core/errorDNA/dependencyAnalyzer';\r\n\r\n// Mock TypeScript module\r\njest.mock('typescript', () => ({\r\n  createSourceFile: jest.fn(),\r\n  createProgram: jest.fn(() => ({\r\n    getSourceFile: jest.fn(() => ({\r\n      getText: jest.fn(() => ''),\r\n    })),\r\n  })),\r\n  ScriptTarget: { Latest: 0 },\r\n  ModuleKind: { ESNext: 0 },\r\n  JsxEmit: { React: 0 },\r\n  ModuleResolutionKind: { NodeJs: 0 },\r\n  readConfigFile: jest.fn(() => ({ config: {} })),\r\n  parseJsonConfigFileContent: jest.fn(() => ({ options: {} })),\r\n  sys: { readFile: jest.fn() },\r\n  isImportDeclaration: jest.fn(),\r\n  isExportDeclaration: jest.fn(),\r\n  isExportAssignment: jest.fn(),\r\n  isNamedImports: jest.fn(),\r\n  isNamedExports: jest.fn(),\r\n  forEachChild: jest.fn(),\r\n}));\r\n\r\ndescribe('DependencyAnalyzer', () => {\r\n  let analyzer: DependencyAnalyzer;\r\n  let mockSourceFile: any;\r\n\r\n  beforeEach(() => {\r\n    jest.clearAllMocks();\r\n    analyzer = new DependencyAnalyzer('.');\r\n\r\n    mockSourceFile = {\r\n      statements: [],\r\n      getText: jest.fn(() => ''),\r\n    };\r\n\r\n    (ts.createSourceFile as jest.Mock).mockReturnValue(mockSourceFile);\r\n    (ts.isImportDeclaration as unknown as jest.Mock).mockImplementation((node: any) => node.kind === 'ImportDeclaration');\r\n    (ts.isExportDeclaration as unknown as jest.Mock).mockImplementation((node: any) => node.kind === 'ExportDeclaration');\r\n    (ts.isExportAssignment as unknown as jest.Mock).mockImplementation((node: any) => node.kind === 'ExportAssignment');\r\n    (ts.isNamedImports as unknown as jest.Mock).mockImplementation((node: any) => node.namedBindings?.elements !== undefined);\r\n    (ts.isNamedExports as unknown as jest.Mock).mockImplementation((node: any) => node.exportClause?.elements !== undefined);\r\n    (ts.forEachChild as jest.Mock).mockImplementation((node: any, cb: any) => {\r\n      if (node.statements) {\r\n        node.statements.forEach(cb);\r\n      }\r\n    });\r\n  });\r\n\r\n  it('should analyze imports and exports in a TypeScript file', async () => {\r\n    const fileContent = `\r\n      import { useState } from 'react';\r\n      import type { FC } from 'react';\r\n      import DefaultExport from './module';\r\n      export { Something } from './other';\r\n      export default App;\r\n    `;\r\n\r\n    mockSourceFile.statements = [\r\n      {\r\n        kind: 'ImportDeclaration',\r\n        moduleSpecifier: { text: 'react' },\r\n        importClause: {\r\n          name: null,\r\n          isTypeOnly: false,\r\n          namedBindings: {\r\n            elements: [{ name: { text: 'useState' } }],\r\n          },\r\n        },\r\n      },\r\n      {\r\n        kind: 'ImportDeclaration',\r\n        moduleSpecifier: { text: 'react' },\r\n        importClause: {\r\n          name: null,\r\n          isTypeOnly: true,\r\n          namedBindings: {\r\n            elements: [{ name: { text: 'FC' } }],\r\n          },\r\n        },\r\n      },\r\n      {\r\n        kind: 'ImportDeclaration',\r\n        moduleSpecifier: { text: './module' },\r\n        importClause: {\r\n          name: { text: 'DefaultExport' },\r\n          isTypeOnly: false,\r\n        },\r\n      },\r\n      {\r\n        kind: 'ExportDeclaration',\r\n        moduleSpecifier: { text: './other' },\r\n        exportClause: {\r\n          elements: [{ name: { text: 'Something' } }],\r\n        },\r\n        isTypeOnly: false,\r\n      },\r\n      {\r\n        kind: 'ExportAssignment',\r\n        expression: { getText: () => 'App' },\r\n      },\r\n    ];\r\n\r\n    const { imports, exports } = await analyzer.analyze(fileContent);\r\n\r\n    expect(imports).toEqual([\r\n      { name: 'useState', path: 'react', isDefault: false, isType: false },\r\n      { name: 'FC', path: 'react', isDefault: false, isType: true },\r\n      { name: 'DefaultExport', path: './module', isDefault: true, isType: false },\r\n    ]);\r\n\r\n    expect(exports).toEqual([\r\n      { name: 'Something', isDefault: false, isType: false },\r\n      { name: 'App', isDefault: true, isType: false },\r\n    ]);\r\n  });\r\n\r\n  it('should generate a dependency graph', async () => {\r\n    const mockSourceFile = {\r\n      getText: jest.fn(() => `\r\n        import { useState } from 'react';\r\n        import { Something } from './other';\r\n      `),\r\n    };\r\n\r\n    (ts.createProgram as jest.Mock).mockReturnValue({\r\n      getSourceFile: jest.fn(() => mockSourceFile),\r\n    });\r\n\r\n    const graph = await analyzer.getDependencyGraph('src/components/App.tsx');\r\n\r\n    expect(graph.nodes).toEqual([\r\n      {\r\n        id: 'src/components/App.tsx',\r\n        type: 'file',\r\n        name: 'App.tsx',\r\n        path: 'src/components/App.tsx',\r\n      },\r\n    ]);\r\n\r\n    expect(graph.edges).toEqual([]);\r\n  });\r\n\r\n  it('should handle circular dependencies', async () => {\r\n    const mockFileA = {\r\n      getText: jest.fn(() => `import { B } from './B';`),\r\n    };\r\n\r\n    const mockFileB = {\r\n      getText: jest.fn(() => `import { A } from './A';`),\r\n    };\r\n\r\n    let fileCounter = 0;\r\n    (ts.createProgram as jest.Mock).mockReturnValue({\r\n      getSourceFile: jest.fn(() => {\r\n        fileCounter++;\r\n        return fileCounter === 1 ? mockFileA : mockFileB;\r\n      }),\r\n    });\r\n\r\n    const graph = await analyzer.getDependencyGraph('src/A.ts');\r\n\r\n    expect(graph.nodes).toEqual([\r\n      {\r\n        id: 'src/A.ts',\r\n        type: 'file',\r\n        name: 'A.ts',\r\n        path: 'src/A.ts',\r\n      },\r\n    ]);\r\n\r\n    expect(graph.edges).toEqual([]);\r\n  });\r\n\r\n  it('should handle type-only imports and exports', async () => {\r\n    const fileContent = `\r\n      import type { Type1 } from './types';\r\n      export type { Type2 } from './other-types';\r\n    `;\r\n\r\n    mockSourceFile.statements = [\r\n      {\r\n        kind: 'ImportDeclaration',\r\n        moduleSpecifier: { text: './types' },\r\n        importClause: {\r\n          isTypeOnly: true,\r\n          namedBindings: {\r\n            elements: [{ name: { text: 'Type1' } }],\r\n          },\r\n        },\r\n      },\r\n      {\r\n        kind: 'ExportDeclaration',\r\n        moduleSpecifier: { text: './other-types' },\r\n        exportClause: {\r\n          elements: [{ name: { text: 'Type2' } }],\r\n        },\r\n        isTypeOnly: true,\r\n      },\r\n    ];\r\n\r\n    const { imports, exports } = await analyzer.analyze(fileContent);\r\n\r\n    expect(imports).toEqual([\r\n      { name: 'Type1', path: './types', isDefault: false, isType: true },\r\n    ]);\r\n\r\n    expect(exports).toEqual([\r\n      { name: 'Type2', isDefault: false, isType: true },\r\n    ]);\r\n  });\r\n}); "]}