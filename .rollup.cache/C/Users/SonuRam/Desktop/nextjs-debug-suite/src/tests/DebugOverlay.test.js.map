{"version":3,"file":"DebugOverlay.test.js","sourceRoot":"","sources":["DebugOverlay.test.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { render, screen, fireEvent } from '@testing-library/react';\r\nimport { DebugOverlay } from '../components/DebugOverlay';\r\nimport { useDebugContext } from '../components/DebugSuiteProvider';\r\nimport { ThemeProvider } from '@emotion/react';\r\nimport { darkTheme } from '../components/styles/theme';\r\n\r\n// Mock the context hook\r\njest.mock('../components/DebugSuiteProvider', () => ({\r\n  useDebugContext: jest.fn()\r\n}));\r\n\r\n// Mock framer-motion to avoid animation issues in tests\r\njest.mock('framer-motion', () => ({\r\n  motion: {\r\n    div: ({ children, ...props }: any) => <div {...props}>{children}</div>\r\n  },\r\n}));\r\n\r\n// Mock react-icons\r\njest.mock('react-icons/md', () => ({\r\n  MdDragIndicator: () => <div data-testid=\"drag-indicator\" />\r\n}));\r\n\r\n// Mock tab components\r\njest.mock('../components/tabs/ErrorsTab', () => ({\r\n  ErrorsTab: () => <div data-testid=\"errors-content\">Errors Content</div>\r\n}));\r\n\r\njest.mock('../components/tabs/PerformanceTab', () => ({\r\n  PerformanceTab: () => <div data-testid=\"performance-content\">Performance Content</div>\r\n}));\r\n\r\njest.mock('../components/tabs/NetworkTab', () => ({\r\n  NetworkTab: () => <div data-testid=\"network-content\">Network Content</div>\r\n}));\r\n\r\njest.mock('../components/tabs/ConsoleTab', () => ({\r\n  ConsoleTab: () => <div data-testid=\"console-content\">Console Content</div>\r\n}));\r\n\r\njest.mock('../components/tabs/AITab', () => ({\r\n  AITab: () => <div data-testid=\"ai-content\">AI Content</div>\r\n}));\r\n\r\ndescribe('DebugOverlay', () => {\r\n  const mockClearData = jest.fn();\r\n  const mockExportData = jest.fn();\r\n  const mockConfig = {\r\n    overlay: {\r\n      tabs: ['errors', 'performance', 'network', 'console', 'ai'],\r\n      position: 'top-right',\r\n      size: { width: 400, height: 300 },\r\n      opacity: 0.9,\r\n      theme: 'dark'\r\n    }\r\n  };\r\n\r\n  beforeEach(() => {\r\n    // Mock URL.createObjectURL\r\n    URL.createObjectURL = jest.fn(() => 'mock-url');\r\n    URL.revokeObjectURL = jest.fn();\r\n    \r\n    // Mock document.createElement for the download link\r\n    const mockLink = {\r\n      href: '',\r\n      download: '',\r\n      click: jest.fn(),\r\n      remove: jest.fn()\r\n    };\r\n    document.createElement = jest.fn().mockReturnValue(mockLink);\r\n\r\n    (useDebugContext as jest.Mock).mockReturnValue({\r\n      config: mockConfig,\r\n      clearData: mockClearData,\r\n      exportData: mockExportData\r\n    });\r\n  });\r\n\r\n  afterEach(() => {\r\n    jest.clearAllMocks();\r\n  });\r\n\r\n  const renderDebugOverlay = () => {\r\n    return render(\r\n      <ThemeProvider theme={darkTheme}>\r\n        <DebugOverlay />\r\n      </ThemeProvider>\r\n    );\r\n  };\r\n\r\n  it('renders all configured tabs', () => {\r\n    renderDebugOverlay();\r\n    mockConfig.overlay.tabs.forEach(tab => {\r\n      const tabElement = screen.getByText(tab.charAt(0).toUpperCase() + tab.slice(1));\r\n      expect(tabElement).toBeInTheDocument();\r\n    });\r\n  });\r\n\r\n  it('switches tab content when clicking different tabs', () => {\r\n    renderDebugOverlay();\r\n    \r\n    // Initial tab should be errors\r\n    expect(screen.getByTestId('errors-content')).toBeInTheDocument();\r\n    \r\n    // Click Performance tab\r\n    fireEvent.click(screen.getByText('Performance'));\r\n    expect(screen.getByTestId('performance-content')).toBeInTheDocument();\r\n\r\n    // Click Network tab\r\n    fireEvent.click(screen.getByText('Network'));\r\n    expect(screen.getByTestId('network-content')).toBeInTheDocument();\r\n  });\r\n\r\n  it('renders action buttons', () => {\r\n    renderDebugOverlay();\r\n    expect(screen.getByText('Clear')).toBeInTheDocument();\r\n    expect(screen.getByText('Export')).toBeInTheDocument();\r\n  });\r\n\r\n  it('renders resize handle', () => {\r\n    renderDebugOverlay();\r\n    expect(screen.getByTestId('drag-indicator')).toBeInTheDocument();\r\n  });\r\n\r\n  it('applies correct initial size from config', () => {\r\n    renderDebugOverlay();\r\n    const overlay = screen.getByTestId('overlay-container');\r\n    expect(overlay).toHaveStyle({\r\n      width: '400px',\r\n      height: '300px'\r\n    });\r\n  });\r\n\r\n  it('applies correct opacity from config', () => {\r\n    renderDebugOverlay();\r\n    const overlay = screen.getByTestId('overlay-container');\r\n    expect(overlay).toHaveStyle({\r\n      opacity: '0.9'\r\n    });\r\n  });\r\n\r\n  it('calls clearData when Clear button is clicked', () => {\r\n    renderDebugOverlay();\r\n    fireEvent.click(screen.getByText('Clear'));\r\n    expect(mockClearData).toHaveBeenCalledWith('errors'); // Initial tab\r\n  });\r\n\r\n  it('calls exportData when Export button is clicked', () => {\r\n    renderDebugOverlay();\r\n    fireEvent.click(screen.getByText('Export'));\r\n    expect(mockExportData).toHaveBeenCalledWith('errors'); // Initial tab\r\n  });\r\n}); "]}