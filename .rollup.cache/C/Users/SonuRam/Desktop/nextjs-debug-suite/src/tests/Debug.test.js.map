{"version":3,"file":"Debug.test.js","sourceRoot":"","sources":["Debug.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { debug } from '../core/debug';\r\nimport type { LogEntry, LogLevel, LogCategory } from '../core/debug';\r\n\r\njest.mock('../core/debug', () => {\r\n  let logs: LogEntry[] = [];\r\n  let logCallbacks: ((entry: LogEntry) => void)[] = [];\r\n  let enabled = true;\r\n  let logLevels = new Set(['ERROR', 'WARN', 'INFO']);\r\n  let logCategories = new Set(['ERROR', 'NETWORK', 'PERFORMANCE', 'STATE']);\r\n\r\n  const createLogEntry = (level: LogLevel, category: LogCategory, message: string, args: any[]): LogEntry => ({\r\n    id: Math.random().toString(36).substring(7),\r\n    timestamp: Date.now(),\r\n    level,\r\n    category,\r\n    message,\r\n    data: args.length > 0 ? args : undefined\r\n  });\r\n\r\n  const addLog = (entry: LogEntry) => {\r\n    if (!enabled || !logLevels.has(entry.level) || !logCategories.has(entry.category)) return;\r\n    logs.push(entry);\r\n    logCallbacks.forEach(cb => cb(entry));\r\n  };\r\n\r\n  return {\r\n    debug: {\r\n      clearLogs: () => {\r\n        logs = [];\r\n      },\r\n      enable: () => {\r\n        enabled = true;\r\n      },\r\n      disable: () => {\r\n        enabled = false;\r\n      },\r\n      setLogLevels: (levels: LogLevel[]) => {\r\n        logLevels = new Set(levels);\r\n      },\r\n      setLogCategories: (categories: LogCategory[]) => {\r\n        logCategories = new Set(categories);\r\n      },\r\n      error: (category: LogCategory, message: string, ...args: any[]) => {\r\n        addLog(createLogEntry('ERROR', category, message, args));\r\n      },\r\n      warn: (category: LogCategory, message: string, ...args: any[]) => {\r\n        addLog(createLogEntry('WARN', category, message, args));\r\n      },\r\n      info: (category: LogCategory, message: string, ...args: any[]) => {\r\n        addLog(createLogEntry('INFO', category, message, args));\r\n      },\r\n      debug: (category: LogCategory, message: string, ...args: any[]) => {\r\n        addLog(createLogEntry('DEBUG', category, message, args));\r\n      },\r\n      trace: (category: LogCategory, message: string, ...args: any[]) => {\r\n        addLog(createLogEntry('TRACE', category, message, args));\r\n      },\r\n      getLogs: (filter?: { level?: LogLevel; category?: LogCategory; search?: string }) => {\r\n        if (!filter) return logs;\r\n        return logs.filter(entry => {\r\n          if (filter.level && entry.level !== filter.level) return false;\r\n          if (filter.category && entry.category !== filter.category) return false;\r\n          if (filter.search) {\r\n            const searchLower = filter.search.toLowerCase();\r\n            return (\r\n              entry.message.toLowerCase().includes(searchLower) ||\r\n              (entry.data && JSON.stringify(entry.data).toLowerCase().includes(searchLower))\r\n            );\r\n          }\r\n          return true;\r\n        });\r\n      },\r\n      onLog: (callback: (entry: LogEntry) => void) => {\r\n        logCallbacks.push(callback);\r\n        return () => {\r\n          const index = logCallbacks.indexOf(callback);\r\n          if (index > -1) {\r\n            logCallbacks.splice(index, 1);\r\n          }\r\n        };\r\n      }\r\n    }\r\n  };\r\n});\r\n\r\ndescribe('Debug', () => {\r\n  beforeEach(() => {\r\n    jest.clearAllMocks();\r\n    debug.clearLogs();\r\n    debug.enable();\r\n    debug.setLogLevels(['ERROR', 'WARN', 'INFO']);\r\n    debug.setLogCategories(['ERROR', 'NETWORK', 'PERFORMANCE', 'STATE']);\r\n  });\r\n\r\n  it('should log messages with different levels', () => {\r\n    debug.error('ERROR', 'Error message');\r\n    debug.warn('NETWORK', 'Warning message');\r\n    debug.info('PERFORMANCE', 'Info message');\r\n    debug.debug('STATE', 'Debug message');\r\n    debug.trace('CUSTOM', 'Trace message');\r\n\r\n    const logs = debug.getLogs();\r\n    expect(logs).toHaveLength(3); // Only ERROR, WARN, INFO are enabled by default\r\n    expect(logs[0].level).toBe('ERROR');\r\n    expect(logs[1].level).toBe('WARN');\r\n    expect(logs[2].level).toBe('INFO');\r\n  });\r\n\r\n  it('should filter logs by level', () => {\r\n    debug.error('ERROR', 'Error message');\r\n    debug.warn('NETWORK', 'Warning message');\r\n    debug.info('PERFORMANCE', 'Info message');\r\n    debug.debug('STATE', 'Debug message');\r\n    debug.trace('CUSTOM', 'Trace message');\r\n\r\n    debug.setLogLevels(['ERROR', 'WARN']);\r\n    const logs = debug.getLogs({ level: 'ERROR' });\r\n    expect(logs).toHaveLength(1);\r\n    expect(logs[0].level).toBe('ERROR');\r\n  });\r\n\r\n  it('should filter logs by category', () => {\r\n    debug.info('NETWORK', 'Network message');\r\n    debug.info('STATE', 'State message');\r\n    debug.info('PERFORMANCE', 'Performance message');\r\n    debug.info('CUSTOM', 'Custom message');\r\n\r\n    debug.setLogCategories(['NETWORK', 'STATE']);\r\n    const logs = debug.getLogs({ category: 'NETWORK' });\r\n    expect(logs).toHaveLength(1);\r\n    expect(logs[0].category).toBe('NETWORK');\r\n  });\r\n\r\n  it('should handle console method overrides', () => {\r\n    const originalConsoleLog = console.log;\r\n    console.log('Test console.log');\r\n\r\n    const logs = debug.getLogs({ category: 'CUSTOM' });\r\n    expect(logs).toHaveLength(1);\r\n    expect(logs[0].message).toBe('Test console.log');\r\n\r\n    console.log = originalConsoleLog;\r\n  });\r\n\r\n  it('should notify log callbacks', () => {\r\n    const callback = jest.fn();\r\n    const unsubscribe = debug.onLog(callback);\r\n\r\n    debug.info('NETWORK', 'Test message');\r\n\r\n    expect(callback).toHaveBeenCalledWith(\r\n      expect.objectContaining({\r\n        level: 'INFO',\r\n        category: 'NETWORK',\r\n        message: 'Test message'\r\n      })\r\n    );\r\n\r\n    unsubscribe();\r\n  });\r\n\r\n  it('should respect enabled state', () => {\r\n    debug.disable();\r\n    debug.info('NETWORK', 'Test message');\r\n\r\n    const logs = debug.getLogs();\r\n    expect(logs).toHaveLength(0);\r\n\r\n    debug.enable();\r\n    debug.info('NETWORK', 'Test message');\r\n\r\n    const enabledLogs = debug.getLogs();\r\n    expect(enabledLogs).toHaveLength(1);\r\n  });\r\n\r\n  it('should limit log history', () => {\r\n    const maxLogs = 1000;\r\n    for (let i = 0; i < maxLogs + 10; i++) {\r\n      debug.info('NETWORK', `Message ${i}`);\r\n    }\r\n\r\n    const logs = debug.getLogs();\r\n    expect(logs).toHaveLength(maxLogs);\r\n  });\r\n\r\n  it('should search logs by content', () => {\r\n    debug.info('NETWORK', 'Test message 1', { data: 'test1' });\r\n    debug.info('NETWORK', 'Test message 2', { data: 'test2' });\r\n    debug.info('NETWORK', 'Different message', { data: 'test3' });\r\n\r\n    const logs = debug.getLogs({ search: 'test2' });\r\n    expect(logs).toHaveLength(1);\r\n    expect(logs[0].message).toBe('Test message 2');\r\n  });\r\n}); "]}